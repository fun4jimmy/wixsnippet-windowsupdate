<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <Product Id="2F85CB02-F57A-415D-B437-46D90D0F3579"
           Name="WindowsUpdate"
           Language="1033"
           Version="1.0.0"
           Manufacturer="WiX Snippets"
           UpgradeCode="25486F1D-55E1-4B36-A8E9-CC28206FCAD9">

    <!-- The installer version has to be greater than or equal to the version Merge Module version number so change this if there
         are any LGHT1104 warnings. -->
    <Package InstallerVersion="405"
             Compressed="yes"/>

    <!-- All compressed packages need at least one cabinet -->
    <Media Id="1" Cabinet="media1.cab" EmbedCab="yes"/>

    <!-- WiX dictates we must always start with this directory to setup the root directory of the installation -->
    <Directory Id="TARGETDIR" Name="SourceDir">

      <?if $(sys.BUILDARCH)="x86"?>
        <?define ProgramFilesId="ProgramFilesFolder"?>
      <?else?>
        <?define ProgramFilesId="ProgramFiles64Folder"?>
      <?endif?>

      <!-- This references the "%ProgramFiles%" windows directory -->
      <Directory Id="$(var.ProgramFilesId)">

        <!-- Now we being our custom directory structure nested in the Windows "Program Files" directory -->

        <!-- It is nice to group all our installers within the same top level directory -->
        <Directory Id="DirectoryCompany" Name="WiX Snippets">
          <!-- Application specific directory -->
          <Directory Id="DirectorySnippet" Name="CRTMergeModule"/>
        </Directory>
      </Directory>
    </Directory>

    <!-- Not really necessary in this example but would be easier to extend the application contents using a group -->
    <ComponentGroup Id="ComponentGroupApplication" Directory="DirectorySnippet">
      <!-- We should use one file per component so WiX can automatically set the guid (Guid="*") -->
      <Component Id="ComponentApplication" Guid="*">
        <File Id="FileApplication" Source="..\bin\application.exe" KeyPath="yes"/>
      </Component>
    </ComponentGroup>

    <DirectoryRef Id="TARGETDIR">
      <!-- Because the application is linked against the multithread-specific and DLL-specific version of the run-time library
           we must also include the merge module containing the relevant visual studio merge module version. -->

      <!-- There are no merge modules for WiX supported architecture ia64 so fail early with a nice error message -->  
      <?if $(sys.BUILDARCH)!="x86" and $(sys.BUILDARCH)!="x64"?>
        <?error Unsupported architecture $(sys.BUILDARCH), no merge module for this architecture.?>
      <?endif?>

      <?if $(env.VisualStudioVersion) = "14.0"?>
        <Merge Id="MergeCRT" SourceFile="$(env.ProgramFiles(x86))\Common Files\Merge Modules\Microsoft_VC140_CRT_$(sys.BUILDARCH).msm" DiskId="1" Language="0"/>
      <?elseif $(env.VisualStudioVersion) = "12.0"?>
        <Merge Id="MergeCRT" SourceFile="$(env.ProgramFiles(x86))\Common Files\Merge Modules\Microsoft_VC120_CRT_$(sys.BUILDARCH).msm" DiskId="1" Language="0"/>
      <?elseif $(env.VisualStudioVersion) = "11.0"?>
        <Merge Id="MergeCRT" SourceFile="$(env.ProgramFiles(x86))\Common Files\Merge Modules\Microsoft_VC110_CRT_$(sys.BUILDARCH).msm" DiskId="1" Language="0"/>
      <?else?>
        <?ifdef $(env.VisualStudioVersion)?>
          <?error Unsupported version of Visual Studio $(env.VisualStudioVersion), unable to determine CRT merge module version.?>
        <?else?>
          <?error %VisualStudioVersion% envirionment variable not defined, unable to determine CRT merge module version.?>
        <?endif?>
      <?endif?>
    </DirectoryRef>

    <!-- Make sure our feature is always installed (Absent="disallow") -->
    <Feature Id="FeatureApplication" Absent="disallow">
      <ComponentGroupRef Id="ComponentGroupApplication"/>
      <MergeRef Id="MergeCRT"/>
    </Feature>

  </Product>
</Wix>